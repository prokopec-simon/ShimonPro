---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<script is:inline>
const theme = (() => {
  if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
    return localStorage.getItem("theme");
  }
  if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    return "dark";
  }
  return "light";
})();

if (theme === "light") {
  document.documentElement.classList.remove("dark");
} else {
  document.documentElement.classList.add("dark");
}
window.localStorage.setItem("theme", theme);
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body
    class="bg-flax-100 dark:bg-gray-900 mx-auto min-h-screen max-w-screen-xl px-6 py-12 font-sans md:px-20 md:py-0 flex md:flex-row flex-col"
  >
    <slot />
  </body>
</html>
